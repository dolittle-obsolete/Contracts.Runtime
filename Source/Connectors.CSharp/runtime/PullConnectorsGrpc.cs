// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Connectors/runtime/pull_connectors.proto
// </auto-generated>
// Original file comments:
// ---------------------------------------------------------------------------------------------
//  Copyright (c) Dolittle. All rights reserved.
//  Licensed under the MIT License. See LICENSE in the project root for license information.
// --------------------------------------------------------------------------------------------
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Dolittle.TimeSeries.Connectors.Runtime {
  /// <summary>
  /// Represents the service for working with connectors that are pull based
  /// </summary>
  public static partial class PullConnectors
  {
    static readonly string __ServiceName = "dolittle.timeseries.connectors.runtime.PullConnectors";

    static readonly grpc::Marshaller<global::Dolittle.TimeSeries.Connectors.Runtime.PullConnector> __Marshaller_dolittle_timeseries_connectors_runtime_PullConnector = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Dolittle.TimeSeries.Connectors.Runtime.PullConnector.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Dolittle.TimeSeries.Connectors.Runtime.PullRequest> __Marshaller_dolittle_timeseries_connectors_runtime_PullRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Dolittle.TimeSeries.Connectors.Runtime.PullRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Dolittle.TimeSeries.Connectors.Runtime.WriteMessage> __Marshaller_dolittle_timeseries_connectors_runtime_WriteMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Dolittle.TimeSeries.Connectors.Runtime.WriteMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::Dolittle.TimeSeries.Connectors.Runtime.PullConnector, global::Dolittle.TimeSeries.Connectors.Runtime.PullRequest> __Method_Connect = new grpc::Method<global::Dolittle.TimeSeries.Connectors.Runtime.PullConnector, global::Dolittle.TimeSeries.Connectors.Runtime.PullRequest>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Connect",
        __Marshaller_dolittle_timeseries_connectors_runtime_PullConnector,
        __Marshaller_dolittle_timeseries_connectors_runtime_PullRequest);

    static readonly grpc::Method<global::Dolittle.TimeSeries.Connectors.Runtime.WriteMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Write = new grpc::Method<global::Dolittle.TimeSeries.Connectors.Runtime.WriteMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Write",
        __Marshaller_dolittle_timeseries_connectors_runtime_WriteMessage,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Dolittle.TimeSeries.Connectors.Runtime.PullConnectorsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PullConnectors</summary>
    [grpc::BindServiceMethod(typeof(PullConnectors), "BindService")]
    public abstract partial class PullConnectorsBase
    {
      public virtual global::System.Threading.Tasks.Task Connect(global::Dolittle.TimeSeries.Connectors.Runtime.PullConnector request, grpc::IServerStreamWriter<global::Dolittle.TimeSeries.Connectors.Runtime.PullRequest> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Write(global::Dolittle.TimeSeries.Connectors.Runtime.WriteMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for PullConnectors</summary>
    public partial class PullConnectorsClient : grpc::ClientBase<PullConnectorsClient>
    {
      /// <summary>Creates a new client for PullConnectors</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PullConnectorsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PullConnectors that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PullConnectorsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PullConnectorsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PullConnectorsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncServerStreamingCall<global::Dolittle.TimeSeries.Connectors.Runtime.PullRequest> Connect(global::Dolittle.TimeSeries.Connectors.Runtime.PullConnector request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Connect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Dolittle.TimeSeries.Connectors.Runtime.PullRequest> Connect(global::Dolittle.TimeSeries.Connectors.Runtime.PullConnector request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_Connect, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Write(global::Dolittle.TimeSeries.Connectors.Runtime.WriteMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Write(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Write(global::Dolittle.TimeSeries.Connectors.Runtime.WriteMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Write, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> WriteAsync(global::Dolittle.TimeSeries.Connectors.Runtime.WriteMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WriteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> WriteAsync(global::Dolittle.TimeSeries.Connectors.Runtime.WriteMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Write, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override PullConnectorsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PullConnectorsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(PullConnectorsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Connect, serviceImpl.Connect)
          .AddMethod(__Method_Write, serviceImpl.Write).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PullConnectorsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Connect, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Dolittle.TimeSeries.Connectors.Runtime.PullConnector, global::Dolittle.TimeSeries.Connectors.Runtime.PullRequest>(serviceImpl.Connect));
      serviceBinder.AddMethod(__Method_Write, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Dolittle.TimeSeries.Connectors.Runtime.WriteMessage, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.Write));
    }

  }
}
#endregion
